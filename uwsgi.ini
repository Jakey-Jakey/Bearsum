[uwsgi]
; Core configuration
module = wsgi:app          ; Point to the 'app' object in your wsgi.py file
master = true             ; Enable the master process
processes = 2             ; Start with 2 worker processes (adjust based on Render plan)

; Networking
; Render injects the PORT environment variable. uWSGI binds to it.
http = :$(PORT)
; Alternatively, use socket if behind a web server configured by Render (http is simpler for Render Web Services)
; socket = /tmp/uwsgi.sock
; chmod-socket = 666

; Application specifics
enable-threads = true      ; REQUIRED: Allow Flask/Python threading for background tasks
die-on-term = true        ; Shutdown gracefully on termination signal
need-app = true           ; Fail startup if the app cannot be loaded

; Logging
; Log to stdout/stderr, which Render captures
logto = /dev/stdout
; Alternatively, remove logto and let uWSGI handle logging implicitly to stdout/stderr

; Optional: Performance tuning (adjust as needed)
; buffer-size = 32768     ; Increase buffer size if needed
; vacuum = true           ; Clean up sockets/pids on exit
